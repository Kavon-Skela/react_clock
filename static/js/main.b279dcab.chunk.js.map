{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["sliceTimeString","date","toUTCString","slice","Clock","currentDate","Date","state","timerId","this","window","setInterval","currentStringDate","setState","console","info","prevProps","clockName","props","debug","clearInterval","className","React","Component","App","hasClock","handlerRightClick","event","preventDefault","handlerLeftClick","addEventListener","name","value","now","toString","getRandomName","removeEventListener","ReactDOM","render","document","getElementById"],"mappings":"sNAUMA,EAAkB,SAACC,GACvB,OAAOA,EAAKC,cAAcC,OAAO,IAAK,IAG3BC,EAAb,4MACEC,YAAc,IAAIC,KADpB,EAGEC,MAAQ,CACNN,KAAMD,EAAgB,EAAKK,cAJ/B,EAOEG,QAAU,EAPZ,uDASE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAMN,EAAc,IAAIC,KAClBM,EAAoBZ,EAAgBK,GAE1C,EAAKQ,SAAS,CAAEZ,KAAMW,IAEtBE,QAAQC,KAAKH,KACZ,OAjBP,gCAoBE,SACEI,GAEIA,EAAUC,YAAcR,KAAKS,MAAMD,WAErCH,QAAQK,MAAR,uBAA8BH,EAAUC,UAAxC,eAAwDR,KAAKS,MAAMD,cAzBzE,kCA6BE,WACEP,OAAOU,cAAcX,KAAKD,WA9B9B,oBAiCE,WACE,IAAQP,EAASQ,KAAKF,MAAdN,KAER,OACE,sBAAKoB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGZ,KAAKS,MAAMD,YAGb,YAED,sBAAMI,UAAU,cAAhB,SACGpB,WA7CX,GAA2BqB,IAAMC,WCCpBC,EAAb,4MACEjB,MAAQ,CACNkB,UAAU,EACVR,UAAW,WAHf,EAMET,QAAyB,KAN3B,EA4BEkB,kBAAoB,SAACC,GACnBA,EAAMC,iBACN,EAAKf,SAAS,CAAEY,UAAU,KA9B9B,EAiCEI,iBAAmB,WACjB,EAAKhB,SAAS,CAAEY,UAAU,KAlC9B,uDAQE,WAA2B,IAAD,OACxBf,OAAOoB,iBAAiB,cAAerB,KAAKiB,mBAC5ChB,OAAOoB,iBAAiB,QAASrB,KAAKoB,kBAEtCpB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAMoB,EAnBU,WACpB,IAAMC,EAAQ1B,KAAK2B,MAAMC,WAAW/B,OAAO,GAE3C,MAAM,SAAN,OAAgB6B,GAgBCG,GAEb,EAAKtB,SAAS,CAAEI,UAAWc,MAC1B,QAhBP,kCAmBE,WACMtB,KAAKD,SACPE,OAAOU,cAAcX,KAAKD,SAG5BE,OAAO0B,oBAAoB,cAAe3B,KAAKiB,mBAC/ChB,OAAO0B,oBAAoB,QAAS3B,KAAKoB,oBAzB7C,oBAqCE,WACE,MAGIpB,KAAKF,MAFPkB,EADF,EACEA,SACAR,EAFF,EAEEA,UAGF,OACE,sBAAKI,UAAU,MAAf,UACE,6CACCI,GAEC,cAAC,EAAD,CAAOR,UAAWA,WAhD5B,GAAyBK,IAAMC,WCZ/Bc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b279dcab.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  clockName: string;\n}\n\ninterface State {\n  date: string;\n}\n\nconst sliceTimeString = (date: Date): string => {\n  return date.toUTCString().slice(-12, -4);\n};\n\nexport class Clock extends React.Component<Props, State> {\n  currentDate = new Date();\n\n  state = {\n    date: sliceTimeString(this.currentDate),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const currentDate = new Date();\n      const currentStringDate = sliceTimeString(currentDate);\n\n      this.setState({ date: currentStringDate });\n      // eslint-disable-next-line\n      console.info(currentStringDate);\n    }, 1000);\n  }\n\n  componentDidUpdate(\n    prevProps: Readonly<Props>,\n  ): void {\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render(): React.ReactNode {\n    const { date } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ninterface State {\n  hasClock: boolean;\n  clockName: string;\n}\n\nconst getRandomName = (): string => {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId: number | null = null;\n\n  componentDidMount(): void {\n    window.addEventListener('contextmenu', this.handlerRightClick);\n    window.addEventListener('click', this.handlerLeftClick);\n\n    this.timerId = window.setInterval(() => {\n      const name = getRandomName();\n\n      this.setState({ clockName: name });\n    }, 3300);\n  }\n\n  componentWillUnmount(): void {\n    if (this.timerId) {\n      window.clearInterval(this.timerId);\n    }\n\n    window.removeEventListener('contextmenu', this.handlerRightClick);\n    window.removeEventListener('click', this.handlerLeftClick);\n  }\n\n  handlerRightClick = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  handlerLeftClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const {\n      hasClock,\n      clockName,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock\n        && (\n          <Clock clockName={clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}